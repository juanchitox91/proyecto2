@model SGEA.Models.Entrevista

@{
    ViewBag.Title = "Ver Detalle";
}

<div class="page-title">
    <div class="title_left" style="margin-left:10px;">
        <h1>Ver Detalle Entrevista - @Model.Cedula / @Model.FechaEntrevistaString</h1>
    </div>
    <div class="title_right">
    </div>
</div>


<div class="col-md-12 col-sm-12 col-xs-12">
    <div class="x_panel">
        <div class="x_content">
            <br>

            @using (Html.BeginForm("VerDetalle", "Entrevista", FormMethod.Post, new { @class = "form-horizontal form-label-left", @data_parsley_validate = "" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-group col-lg-12 col-md-12 col-lg-12 col-sm-12 col-xs-12" style="margin-top:10px;">
                    @Html.Label("Curso", new { @class = "control-label col-md-3 col-sm-6 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.DropDownListFor(n => n.CursoID, (List<SelectListItem>)ViewBag.Cursos, new { @required = "required", @class = "form-control col-md-7 col-xs-12", @disabled = "true" })
                    </div>
                </div>                
                <div class="form-group col-lg-12 col-md-12 col-lg-12 col-sm-12 col-xs-12" style="margin-top:10px;">
                    @Html.Label("Alumno", new { @class = "control-label col-md-3 col-sm-6 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.DropDownListFor(n => n.InscripcionID, (List<SelectListItem>)ViewBag.Alumnos, new { @required = "required", @class = "form-control col-md-7 col-xs-12", @disabled = "true" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Motivo, new { @class = "control-label col-md-3 col-sm-6 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextAreaFor(x => x.Motivo, new { @class = "form-control col-md-7 col-xs-12", @required = "required", @type = "text", @disabled = "true" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Acuerdo, new { @class = "control-label col-md-3 col-sm-6 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextAreaFor(x => x.Acuerdo, new { @class = "form-control col-md-7 col-xs-12", @required = "required", @type = "text", @disabled = "true" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Sugerencia, new { @class = "control-label col-md-3 col-sm-6 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextAreaFor(x => x.Sugerencia, new { @class = "form-control col-md-7 col-xs-12", @required = "required", @type = "text", @disabled = "true" })
                    </div>
                </div>
                <div class="ln_solid"></div>
                <div class="form-group">
                    <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                        <a href="@Url.Action("Index","Entrevista")" class="btn btn-primary" type="button"> < Volver</a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jquery")

<script type="text/javascript">
    $(document).ready(function () {

        $('#CursoID').on('change', function () {
            if ($('#CursoID').val()) {
                agregarAlumnos($('#CursoID').val());
            } else {
                $('#InscripcionID').empty().trigger('change');;
                $('#InscripcionID').prop('disabled', 'false');
            }

        });

        function agregarAlumnos(idcurso) {
            $.ajax({
                type: "POST", // la variable type guarda el tipo de la peticion GET,POST,..
                url: "@Url.Action("CargarAlumnos", "Entrevista")", //url guarda la ruta hacia donde se hace la peticion
                data: { idcurso: idcurso }, // data recibe un objeto con la informacion que se enviara al servidor
                success: function (datos)
                {
                    $('#InscripcionID').empty();

                    Object.entries(datos.resultado).forEach(([key, value]) => {
                        var newOption = new Option(value.Value, value.Key, false, false);
                        $('#InscripcionID').append(newOption);
                    });

                    $('#InscripcionID').trigger('change');
                    $('#InscripcionID').prop('disabled', false);
                    //success es una funcion que se utiliza si el servidor retorna informacion
                },
                error: function () {
                }
            })
        }
    });
</script>